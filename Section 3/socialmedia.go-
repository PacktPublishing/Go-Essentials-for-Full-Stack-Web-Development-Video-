package socialmedia

import (
	"time"
)

//go:generate stringer -type=MoodState
type MoodState int

const (
	MoodStateNeutral MoodState = iota
	MoodStateHappy
	MoodStateSad
	MoodStateAngry
	MoodStateHopeful
	MoodStateThrilled
	MoodStateBored
	MoodStateShy
	MoodStateComical
	MoodStateOnCloudNine
)

type AuditableContent struct {
	TimeCreated  time.Time
	TimeModified time.Time
	CreatedBy    string
	ModifiedBy   string
}

type Post struct {
	AuditableContent
	Caption      string
	MessageBody  string
	URL          string
	ImageURI     string
	ThumbnailURI string
	Keywords     []string
	Likers       []string
	AuthorMood   MoodState
}

var Moods map[string]MoodState

func init() {

	Moods = map[string]MoodState{"netural": MoodStateNeutral, "happy": MoodStateHappy, "sad": MoodStateSad, "angry": MoodStateAngry, "hopeful": MoodStateHopeful, "thrilled": MoodStateThrilled, "bored": MoodStateBored, "shy": MoodStateShy, "comical": MoodStateComical, "cloudnine": MoodStateOnCloudNine}
}

func NewPost(username string, mood MoodState, caption string, messageBody string, url string, imageURI string, thumbnailURI string, keywords []string) *Post {

	auditableContent := AuditableContent{CreatedBy: username, DateCreated: time.Now()}
socialmedia.Post{Caption: "Hey! I'm coding in Go!", MessageBody: "I just found this great programming language called Go!", URL: "https://golang.org", AuthorMood: socialmedia.Moods["happy"], AuditableContent: nil}

	post := {Caption: caption, MessageBody: messageBody, URL: url, AuthorMood: mood, AuditableContent: auditableContent}


	return post
}
